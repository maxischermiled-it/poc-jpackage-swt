/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'application'
    id "org.panteleyev.jpackageplugin" version "1.3.1"
}

repositories {
    mavenCentral()
//  mavenLocal()
}

def javaFXPlatform = getJavaFXPlatform()
// def osgi.platform = getJavaFXPlatform()

println("${javaFXPlatform}")

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            def os = System.getProperty("os.name").toLowerCase()
            if (os.contains("windows")) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.win32.win32.x86_64:3.114.0")
            }
            else if (os.contains("linux")) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.gtk.linux.x86_64:3.114.0")
            }
            else if (os.contains("mac")) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.cocoa.macosx.x86_64:3.114.0")
            }
        }
    }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.10'
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation "org.eclipse.platform:org.eclipse.swt.${javaFXPlatform}.x86_64:3.114.100"
    implementation 'org.eclipse.platform:org.eclipse.jface:3.21.0'
}

group = 'ch.frankel.blog.renamer'
version = '1.0-SNAPSHOT'

java {
    modularity.inferModulePath.set(true)
    toolchain {
        languageVersion = JavaLanguageVersion.of('16')
    }
}

test {
    useTestNG()
}

application {
    mainModule.set('me.antoniocaccamo.player')
    mainClass.set('me.antoniocaccamo.player.Main')
}



task copyDependencies ( type: Copy) {
        from configurations.runtimeClasspath
        into "$buildDir/jmods"
}

task copyJar (type : Copy) {
        from tasks.jar
        into "$buildDir/jmods"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.jpackage {

    dependsOn("build", "copyDependencies", "copyJar")

    appName = "Application Name"
    appVersion = project.version.toString()
    vendor = "Antonio Caccamo"
    copyright = "Copyright (c) 2020 Vendor"
    runtimeImage = System.getProperty("java.home")
    module = "me.antoniocaccamo.player/me.antoniocaccamo.player.Main"
    modulePaths =  ["$buildDir/jmods"]
    destination = "$buildDir/dist"
    javaOptions = ["-Dfile.encoding=UTF-8"]

    mac {
        icon = "icons/icons.icns"
    }

    windows {
        icon = "icon.ico"
        winMenu = true
        winDirChooser = true
    }
}

private static String getJavaFXPlatform() {
    def currentOS = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;
    if (currentOS.isLinux()) {
        return 'gtk.linux'
    } else if (currentOS.isMacOsX()) {
        return 'cocoa.macosx'
    }
    return 'win32.win32'
}